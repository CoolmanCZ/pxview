<!doctype refentry PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [

<!-- Process this file with docbook-to-man to generate an nroff manual
     page: `docbook-to-man manpage.sgml > manpage.1'.  You may view
     the manual page with: `docbook-to-man manpage.sgml | nroff -man |
     less'.  A typical entry in a Makefile or Makefile.am is:

manpage.1: manpage.sgml
	docbook-to-man $< > $@

    
	The docbook-to-man binary is found in the docbook-to-man package.
	Please remember that if you create the nroff version in one of the
	debian/rules file targets (such as build), you will need to include
	docbook-to-man in your Build-Depends control field.

  -->

  <!-- Fill in your name for FIRSTNAME and SURNAME. -->
  <!ENTITY dhfirstname "<firstname>UWE</firstname>">
  <!ENTITY dhsurname   "<surname>STEINMANN</surname>">
  <!-- Please adjust the date whenever revising the manpage. -->
  <!ENTITY dhdate      "<date>August 29, 2005</date>">
  <!-- SECTION should be 1-8, maybe w/ subsection other parameters are
       allowed: see man(7), man(1). -->
  <!ENTITY dhsection   "<manvolnum>3</manvolnum>">
  <!ENTITY dhemail     "<email>uwe@steinmann.cx</email>">
  <!ENTITY dhusername  "Uwe Steinmann">
  <!ENTITY dhucpackage "<refentrytitle>PX_GET_DATA_BCD</refentrytitle>">
  <!ENTITY funcname    "PX_get_data_bcd">

  <!ENTITY debian      "<productname>Debian</productname>">
  <!ENTITY gnu         "<acronym>GNU</acronym>">
  <!ENTITY gpl         "&gnu; <acronym>GPL</acronym>">
]>

<refentry>
  <refentryinfo>
    <address>
      &dhemail;
    </address>
    <author>
      &dhfirstname;
      &dhsurname;
    </author>
    <copyright>
      <year>2003</year>
      <holder>&dhusername;</holder>
    </copyright>
    &dhdate;
  </refentryinfo>
  <refmeta>
    &dhucpackage;

    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&funcname;</refname>

    <refpurpose>Get bcd data field</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>#include &lt;paradox.h&gt;</para>
		<para>int &funcname;(pxdoc_t *pxdoc, char *data, int len, char **value)</para>
  </refsynopsisdiv>
  <refsect1>
    <title>DESCRIPTION</title>

    <para>Converts a data field as it stored in the database file into
		  a bcd string. The string will not be longer than 20 chars including
			the final 0. It contains only the characters `+', `-', `0-9', and `.'.
			You should use this function
			instead of accessing the data directly.</para>
		<para><option>data</option> points to the start of the data field in the
		  record. It must be calculated by summing up all field length before
			the field to operate on and add it to the base pointer of the
			record. <option>len</option> is the number of digits after the decimal
			point.</para>
		<para>The function allocates memory for the string returned in
		  <option>*value</option>. This memory has to be freed by the application.
			</para>
		<note><para>This function is deprecated and obsolete if
		  <function>PX_retrieve_record(3)</function> is used.</para></note>

  </refsect1>
  <refsect1>
    <title>RETURN VALUE</title>
    <para>Returns 0 if the value is NULL, -1 in case of an error and 1
		  otherwise.</para>
  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>

    <para>PX_get_data_alpha(3), PX_get_data_byte(3), PX_get_data_long(3), PX_get_data_short(3), PX_get_data_double(3)</para>

  </refsect1>
  <refsect1>
    <title>AUTHOR</title>

    <para>This manual page was written by &dhusername; &dhemail;.</para>

  </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->


