<!doctype refentry PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [

<!-- Process this file with docbook-to-man to generate an nroff manual
     page: `docbook-to-man manpage.sgml > manpage.1'.  You may view
     the manual page with: `docbook-to-man manpage.sgml | nroff -man |
     less'.  A typical entry in a Makefile or Makefile.am is:

manpage.1: manpage.sgml
	docbook-to-man $< > $@

    
	The docbook-to-man binary is found in the docbook-to-man package.
	Please remember that if you create the nroff version in one of the
	debian/rules file targets (such as build), you will need to include
	docbook-to-man in your Build-Depends control field.

  -->

  <!-- Fill in your name for FIRSTNAME and SURNAME. -->
  <!ENTITY dhfirstname "<firstname>UWE</firstname>">
  <!ENTITY dhsurname   "<surname>STEINMANN</surname>">
  <!-- Please adjust the date whenever revising the manpage. -->
  <!ENTITY dhdate      "<date>February 13, 2006</date>">
  <!-- SECTION should be 1-8, maybe w/ subsection other parameters are
       allowed: see man(7), man(1). -->
  <!ENTITY dhsection   "<manvolnum>3</manvolnum>">
  <!ENTITY dhemail     "<email>uwe@steinmann.cx</email>">
  <!ENTITY dhusername  "Uwe Steinmann">
  <!ENTITY dhucpackage "<refentrytitle>PX_INSERT_RECORD</refentrytitle>">
  <!ENTITY funcname    "PX_insert_record">

  <!ENTITY debian      "<productname>Debian</productname>">
  <!ENTITY gnu         "<acronym>GNU</acronym>">
  <!ENTITY gpl         "&gnu; <acronym>GPL</acronym>">
]>

<refentry>
  <refentryinfo>
    <address>
      &dhemail;
    </address>
    <author>
      &dhfirstname;
      &dhsurname;
    </author>
    <copyright>
      <year>2005-2006</year>
      <holder>&dhusername;</holder>
    </copyright>
    &dhdate;
  </refentryinfo>
  <refmeta>
    &dhucpackage;

    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&funcname;</refname>

    <refpurpose>Inserts a new record in the Paradox file</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>#include &lt;paradox.h&gt;</para>
		<para>int &funcname;(pxdoc_t *pxdoc, pxval_t **dataptr)</para>
  </refsynopsisdiv>
  <refsect1>
    <title>DESCRIPTION</title>

    <para>Inserts a new record stored in the array <option>dataptr</option>
		  into a Paradox file. The position of the record will be determined
			by the function itself, starting at the beginning of the file and
			searching towards the end for a free slot. A free slot can be the result
			of former calls of <function>PX_delete_record(3)</function> or not
			completely filled data blocks in the input file. If there is no free
			slot within the file, then a new record will be added at the
			end.</para>
		<para>Blobs will be automatically written if a blob file was set
		  with <function>PX_set_blob_file(3)</function>.</para>
		<para>The memory for <option>dataptr</option> and the field values
		  can be freed after
		  <function>&funcname;</function> has been called.</para>
		<para>Each single element in the array of pointers to pxval_t can be easily
			created with <literal>MAKE_PXVAL(pxdoc_t *pxdoc, pxval_t *val)</literal>
			and setting the actual value afterwards. A quite common way to build up
			the record is the following:</para>
		<programlisting>
<![CDATA[
dataptr = (pxval_t **) malloc(PX_get_num_fields(pxdoc)*sizeof(pxval_t *));
MAKE_PXVAL(pxdoc, dataptr[0]);
dataptr[0]->type = pxfLong;
dataptr[0]->value.lval = 45;
dataptr[1]->type = pxfAlpha;
dataptr[1]->value.str.val = "test";
dataptr[1]->value.str.len = 4;

PX_insert_record(pxdoc, dataptr);
free(dataptr[0]);
free(dataptr[1]);
free(dataptr);
]]>
		</programlisting>
		<para>There is currently no need to set the type, though it is
		  recommended.</para>
		<para>The field types pxfMemoBLOb and pxfFmtMemoBLOb are treated
		  like strings.</para>
		<para>Fields of type pxfAutoInc are automatically incremented if
		  its value is set to NULL. In such a case the value is taken from
			the header of the database. You should not have more than one
			field of type pxfAutoInc in your database, otherwise the
			automatic incrementation will not work.</para>

  </refsect1>
  <refsect1>
    <title>RETURN VALUE</title>
    <para>Returns the record number on success or -1 on failure. The number
		  of the first record is 0.</para>
  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>

    <para>
			<function>PX_retrieve_record(3)</function>,
			<function>PX_delete_record(3)</function>,
			<function>PX_update_record(3)</function>
		</para>

  </refsect1>
  <refsect1>
    <title>AUTHOR</title>

    <para>This manual page was written by &dhusername; &dhemail;.</para>

  </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->


